---
import { formatDate } from '../utils/date';

interface Props {
  url: string;
  title: string;
  date: string;
  description?: string;
  categories?: string[];
  tags?: string[];
}

const { url, title, date, description = '', categories = [], tags = [] } = Astro.props;
---

<article class="xl:w-[1088px] lg:w-[940px] md:w-[760px] w-full bg-white dark:bg-gray-800 p-6 rounded-lg shadow-sm">
  <a href={url}>
    <h2 class="text-2xl font-semibold text-gray-900 dark:text-white hover:text-blue-600 dark:hover:text-blue-400">
      {title}
    </h2>
    {description && (
      <p class="mt-3 text-gray-600 dark:text-gray-300">{description}</p>
    )}
  </a>
  <div class="flex items-center space-x-4 mt-2">
    <time class="text-sm text-gray-500 dark:text-gray-400">
      {formatDate(date)}
    </time>
    {categories.length > 0 && (
      <div class="flex gap-2">
        {categories.map(category => (
          <a
            href={`/categories#${category}`}
            class="text-sm px-3 py-1 bg-gray-100 dark:bg-gray-700 text-gray-600 dark:text-gray-300 rounded-full hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors"
          >
            {category}
          </a>
        ))}
      </div>
    )}
    {tags.length > 0 && (
      <div class="flex gap-2">
        {tags.map(tag => (
          <a
            href={`/tags#${tag}`}
            class="text-sm px-3 py-1 bg-blue-50 dark:bg-blue-900/30 text-blue-600 dark:text-blue-300 rounded-full hover:bg-blue-100 dark:hover:bg-blue-800/30 transition-colors"
          >
            #{tag}
          </a>
        ))}
      </div>
    )}
  </div>
</article>
